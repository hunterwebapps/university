// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.DataAccess;

namespace University.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200421140929_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("University.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nchar(36)")
                        .IsFixedLength(true)
                        .HasMaxLength(36);

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("binary(36)")
                        .IsFixedLength(true)
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "51398400-4dc5-4237-931e-494be54aa2bc",
                            Created = new DateTime(2020, 4, 21, 7, 9, 28, 506, DateTimeKind.Local).AddTicks(2083),
                            Email = "dwaynewhunter@gmail.com",
                            FirstName = "Dwayne",
                            LastName = "Hunter",
                            PasswordHash = "???7???-%X??h\\?,47???z?o?YS??V?[_",
                            PasswordSalt = new byte[] { 121, 13, 41, 77, 155, 121, 67, 166, 37, 84, 39, 39, 166, 235, 157, 232, 79, 34, 48, 23, 56, 5, 254, 178, 94, 189, 45, 205, 65, 71, 83, 41, 159, 164, 61, 214 }
                        });
                });

            modelBuilder.Entity("University.DataAccess.Entities.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(254)")
                        .HasMaxLength(254)
                        .IsUnicode(false);

                    b.HasKey("UserId", "Role");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "51398400-4dc5-4237-931e-494be54aa2bc",
                            Role = "Super"
                        },
                        new
                        {
                            UserId = "51398400-4dc5-4237-931e-494be54aa2bc",
                            Role = "Admin"
                        },
                        new
                        {
                            UserId = "51398400-4dc5-4237-931e-494be54aa2bc",
                            Role = "Staff"
                        },
                        new
                        {
                            UserId = "51398400-4dc5-4237-931e-494be54aa2bc",
                            Role = "Teacher"
                        });
                });

            modelBuilder.Entity("University.DataAccess.Entities.UserRole", b =>
                {
                    b.HasOne("University.DataAccess.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
